{"version":3,"sources":["components/Map/MapView.js","axios.js","components/Summary.jsx","components/Map/DetailsView.jsx","components/table1.jsx","components/table1p2.jsx","components/getInfo.jsx","js/table1Info.js","js/findCountryInfo.js","components/chart4.jsx","components/footer.jsx","App.jsx","js/getChartInfo.js","reportWebVitals.js","index.jsx"],"names":["icons","xxSmall","divIcon","className","iconSize","xSmall","small","normal","large","xLarge","xxLarge","MapView","props","locationArray","mapCenter","onSelectMarker","markerElements","map","location","id","country_code","country","province","coordinates","latitude","longitude","confirmed","latest","markerIcon","title","Marker","position","icon","onclick","Popup","Map","center","zoom","TileLayer","attribution","url","axiosInstance","axios","create","baseURL","totalKeyArray","Summary","selectedLocation","onSelectItem","onDeselectItem","loading","totalElements","key","sum","reduce","total","locationElements","countryCode","locationClass","flag","src","alt","onError","e","target","onerror","onClick","onClickItem","DetailsView","onClickClose","count","Table1","useState","status","setStatusInfo","period","setPeriodInfo","handleClick","p","s","changeCondition","document","querySelectorAll","forEach","classList","add","remove","onMouseOver","querySelector","style","display","onMouseOut","newPeriod","periodInfo","info","textline","global","Math","trunc","el","i","rowText","preventDefault","closest","textContent","findCountry","newStatus","Table1p2","NewConfirmed","population","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","useFetch","data","setData","useEffect","a","fetch","res","json","dataArray","fetchData","statusInfo","findCountryInfo","information","countryInfo","Countries","Country","Chart4","numeration","setNumeration","width","height","margin","backgroundColor","options","newNumeration","Footer","href","App","setLocationArray","setSelectedLocation","setMapCenter","setLoading","countryData","setCountry","chartCountry","setChartCountry","displayingCountryData","setdisplayingCountryData","OneCountryChartInfo","WorldChartInfo","n","Date","setDate","getDate","toISOString","slice","dtimeNums","filterChartData","summary","chartData","color","monthTotal","daysTotal","days","month","check","push","Number","Confirmed","length","Deaths","Recovered","labels","datasets","label","responsive","maintainAspectRatio","layout","padding","top","left","right","bottom","scales","xAxes","ticks","gridLines","drawBorder","yAxes","getCountryChartInfo","statusArr","MonthArr","c","j","num","getWorldChartInfo","filterData","filteredInfo","globalInfo","Global","sort","b","filterInfo","onSelectLocation","useCallback","find","_location","undefined","onDeselectLocation","get","then","locations","sortedLocations","location1","location2","catch","error","console","log","detailsView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88a664b4.chunk.js","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport {\r\n  Map, TileLayer, Marker, Popup,\r\n} from 'react-leaflet';\r\nimport { divIcon } from 'leaflet';\r\n\r\nconst icons = {\r\n  xxSmall: divIcon({ className: 'marker-icon pink', iconSize: [12, 12] }),\r\n  xSmall: divIcon({ className: 'marker-icon pink', iconSize: [16, 16] }),\r\n  small: divIcon({ className: 'marker-icon pink', iconSize: [24, 24] }),\r\n  normal: divIcon({ className: 'marker-icon purple', iconSize: [32, 32] }),\r\n  large: divIcon({ className: 'marker-icon purple', iconSize: [48, 48] }),\r\n  xLarge: divIcon({ className: 'marker-icon red', iconSize: [72, 72] }),\r\n  xxLarge: divIcon({ className: 'marker-icon red', iconSize: [96, 96] }),\r\n};\r\n\r\nfunction MapView(props) {\r\n  const {\r\n    locationArray,\r\n    mapCenter,\r\n    onSelectMarker,\r\n  } = props;\r\n\r\n  const markerElements = locationArray.map((location) => {\r\n    const {\r\n      // eslint-disable-next-line camelcase\r\n      id, country_code,\r\n      country, province,\r\n      coordinates: { latitude, longitude },\r\n      latest: { confirmed },\r\n    } = location;\r\n\r\n    let markerIcon = icons.xxSmall;\r\n    if (confirmed >= 101 && confirmed <= 500) {\r\n      markerIcon = icons.xSmall;\r\n    } else if (confirmed >= 501 && confirmed <= 1000) {\r\n      markerIcon = icons.small;\r\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\r\n      markerIcon = icons.normal;\r\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\r\n      markerIcon = icons.large;\r\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\r\n      markerIcon = icons.xLarge;\r\n    } else if (confirmed >= 50001) {\r\n      markerIcon = icons.xxLarge;\r\n    }\r\n\r\n    let title = country;\r\n    if (province !== '' && province !== country) {\r\n      title = `${province}, ${country}`;\r\n    }\r\n\r\n    return (\r\n      <Marker\r\n        // eslint-disable-next-line camelcase\r\n        key={`${id}-${country_code}`}\r\n        position={[latitude, longitude]}\r\n        icon={markerIcon}\r\n        onclick={() => onSelectMarker(id)} >\r\n        <Popup>\r\n          {title}\r\n        </Popup>\r\n      </Marker>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className='map'>\r\n      <Map center={mapCenter}\r\n        zoom={6}>\r\n        <TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}@2x.png\"\r\n        />\r\n        {markerElements}\r\n      </Map>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default MapView;\r\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n\r\n  baseURL: 'https://coronavirus-tracker-api.herokuapp.com',\r\n\r\n});\r\n\r\nexport default axiosInstance;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\n\r\nconst totalKeyArray = ['confirmed'];\r\nfunction Summary(props) {\r\n  const {\r\n    locationArray,\r\n    selectedLocation,\r\n    onSelectItem,\r\n    onDeselectItem,\r\n    loading,\r\n  } = props;\r\n\r\n  function onClickItem(id) {\r\n    if (selectedLocation === null) onSelectItem(id);\r\n    else if (selectedLocation.id !== id) onSelectItem(id);\r\n    else onDeselectItem();\r\n  }\r\n\r\n  const totalElements = totalKeyArray.map((key) => {\r\n    const sum = locationArray.reduce((total, location) => total + location.latest[key], 0);\r\n    return (\r\n      <div key={key} className=\"columns\">\r\n        <div className=\"column\">\r\n          <h6 className=\"title is-6\">{key}</h6>\r\n        </div>\r\n        <div className=\"column\">\r\n          <p className=\"is-6 has-text-right\">{sum}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const locationElements = locationArray.map((location) => {\r\n    const {\r\n      id, country_code: countryCode,\r\n      country, province,\r\n      latest: { confirmed },\r\n    } = location;\r\n\r\n    let title = country;\r\n    if (province !== '' && province !== country) {\r\n      title = `${province}, ${country}`;\r\n    }\r\n    let locationClass = 'list-view-location';\r\n    if (selectedLocation !== null) {\r\n      if (location.id === selectedLocation.id) {\r\n        locationClass += ' selected';\r\n      }\r\n    }\r\n    let flag = countryCode;\r\n    if (countryCode !== '') {\r\n      flag = <img src={`https://www.countryflags.io/${countryCode}/flat/64.png`} alt='img' onError={(e) => { e.target.onerror = null; e.target.src = 'https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/62/62db5f0a37fc0581a7e2b441098220b89b2379f4_medium.jpg'; }}></img>;\r\n    }\r\n\r\n    return (\r\n      <div key={`${id}-${countryCode}`} className={locationClass} onClick={() => onClickItem(id)}>\r\n        <div className=\"table\">\r\n          <tr>\r\n            <td>{flag}</td>\r\n            <td className=\"title is-7\">{title}</td>\r\n            <td>{confirmed}</td>\r\n          </tr>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"list-view\">\r\n      {\r\n        loading\r\n          ? <p className='fetch-message'>Fetching!</p>\r\n          : (\r\n            <>\r\n              <div className=\"list-view-total\">\r\n                <h2 className=\"title is-4\">Clobal Cases</h2>\r\n                {totalElements}\r\n              </div>\r\n              <div className=\"list-view-locations\">\r\n                {locationElements}\r\n              </div>\r\n            </>\r\n          )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","import React from 'react';\r\n\r\nconst totalKeyArray = ['confirmed', 'deaths'];\r\n\r\nfunction DetailsView(props) {\r\n  const {\r\n    location: { country, province, latest },\r\n    onClickClose,\r\n  } = props;\r\n\r\n  let title = country;\r\n  if (province !== '' && province !== country) {\r\n    title = `${province}, ${country}`;\r\n  }\r\n\r\n  const totalElements = totalKeyArray.map((key) => {\r\n    const count = latest[key];\r\n    return (\r\n      <div key={key} className=\"table2\">\r\n        <tr className='tr_table'>\r\n          <td className=\"td_col\">\r\n            <h6 className=\"tit\">{key}</h6>\r\n          </td>\r\n          <td className=\"td_col\">\r\n            <p className=\"td_count\">{count}</p>\r\n          </td>\r\n        </tr>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"details-view\">\r\n      <div className=\"details-view-close\" onClick={onClickClose}>&times;</div>\r\n      <div className=\"details-view-content\">\r\n        <h4 className=\"title_details\">{title}</h4>\r\n        {totalElements}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default DetailsView;\r\n","import React, { useState } from 'react';\r\nimport '../styles/table1.scss';\r\n\r\nconst Table1 = (props) => {\r\n  const [status, setStatusInfo] = useState(props.status);\r\n  const [period, setPeriodInfo] = useState(props.period);\r\n\r\n  const handleClick = (p, s) => {\r\n    props.changeCondition(p, s);\r\n    if (s === 2) {\r\n      document.querySelectorAll('.main-table-p1 .num1').forEach((e) => e.classList.add('green'));\r\n      document.querySelectorAll('.main-table-p1 .num2').forEach((e) => e.classList.add('green'));\r\n    } else {\r\n      document.querySelectorAll('.main-table-p1 .num1').forEach((e) => e.classList.remove('green'));\r\n      document.querySelectorAll('.main-table-p1 .num2').forEach((e) => e.classList.remove('green'));\r\n    }\r\n  };\r\n\r\n  const handleMenuClick = (country) => {\r\n    props.changeCondition(period, status);\r\n    props.findCountry(country);\r\n  };\r\n\r\n  return (\r\n    <div className=\"table1 main-table-p1\" onMouseOver={() => {\r\n      document.querySelector('.table1 .zoom-btn').style.display = 'block';\r\n    }} onMouseOut={() => {\r\n      document.querySelector('.table1 .zoom-btn').style.display = 'none';\r\n    }}>\r\n      <button className=\"zoom-btn zoom-btn1\">\r\n        <span className=\"zoom-out material-icons \">\r\n          zoom_out_map\r\n      </span>\r\n      </button>\r\n      <footer>\r\n        <button className=\"arrow\" onClick={() => {\r\n          const newPeriod = period === 0 ? 1 : 0;\r\n          setPeriodInfo(newPeriod);\r\n          handleClick(newPeriod, status);\r\n        }}>\r\n          <span className=\"arr-icon material-icons\">\r\n            arrow_left\r\n        </span>\r\n        </button>\r\n        <div>{props.periodInfo[period]}</div>\r\n        <button className=\"arrow\" onClick={() => {\r\n          const newPeriod = period === 1 ? 0 : 1;\r\n          setPeriodInfo(newPeriod);\r\n          handleClick(newPeriod, status);\r\n        }}>\r\n          <span className=\"arr-icon material-icons\">\r\n            arrow_right\r\n        </span>\r\n        </button>\r\n      </footer>\r\n      <div className=\"table1-content-wrapper\">\r\n        <header className=\"h\" >\r\n          <div>{props.info[1][0].textline}</div>\r\n          <h3 className=\"num1\">{props.info[1][0].global}</h3>\r\n          <h5 className=\"col1\">absolute number</h5>\r\n          <h3 className=\"num2\">{Math.trunc((props.info[1][0].global * 100000) / 7827000000)}</h3>\r\n          <h5 className=\"col2\">per 100 th.</h5>\r\n\r\n        </header>\r\n        <div className=\"death-table-content\">\r\n          {props.info[0].map((el, i) => (\r\n            <div key={i}>\r\n              <div className=\"row\" >\r\n                <div className=\"num1\"><span >{el.info}</span><span>  {props.info[1][0].rowText}</span></div>\r\n                <div className=\"num2\"><span>{Math.trunc((el.info * 100000) / 7827000000)}</span><span>  {props.info[1][0].rowText}</span></div>\r\n                <h3 className=\"country btn\" onClick={(e) => {\r\n                  e.preventDefault();\r\n                  if (!e.target.closest('.row')) return;\r\n                  handleMenuClick(e.target.closest('h3').textContent);\r\n                }}>{el.country}</h3>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          ))};\r\n        </div>\r\n      </div>\r\n\r\n      <footer>\r\n        <button className=\"arrow\" onClick={() => {\r\n          let newStatus = status;\r\n          if (status === 0) {\r\n            newStatus = 2;\r\n          } else {\r\n            newStatus = status - 1;\r\n          }\r\n          setStatusInfo(newStatus);\r\n          handleClick(period, newStatus);\r\n        }}>\r\n          <span className=\" arr-icon material-icons\">\r\n            arrow_left\r\n            </span>\r\n        </button>\r\n        <div>{props.info[1][0].textline}</div>\r\n        <button className=\"arrow\" onClick={() => {\r\n          let newStatus = status;\r\n          if (status === 2) {\r\n            newStatus = 0;\r\n          } else {\r\n            newStatus = status + 1;\r\n          }\r\n          setStatusInfo(newStatus);\r\n          handleClick(period, newStatus);\r\n        }}>\r\n          <span className=\"arr-icon material-icons\">\r\n            arrow_right\r\n            </span>\r\n        </button>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table1;\r\n","import React from 'react';\r\nimport '../styles/table1.scss';\r\n\r\nconst Table1p2 = (props) => (\r\n  <div className=\"clone table1\" onMouseOver={() => {\r\n    document.querySelector('.clone .zoom-btn').style.display = 'block';\r\n  }} onMouseOut={() => {\r\n    document.querySelector('.clone .zoom-btn').style.display = 'none';\r\n  }}>\r\n    <button className=\"zoom-btn\">\r\n      <span className=\"zoom-out material-icons \">\r\n        zoom_out_map\r\n    </span>\r\n    </button>\r\n    <div className=\"table1-content-wrapper\">\r\n      <header >\r\n        <h2>{props.info.country}</h2>\r\n        <h5 className=\"col1\">absolute number</h5>\r\n        <h5 className=\"col2\">per 100 th.</h5>\r\n      </header>\r\n      <div className=\"second-table-content\">\r\n        <div >\r\n          <div className=\"row\">\r\n            <h3 className=\"country\"> New Confirmed</h3>\r\n            <div className=\"num1\"><span >{props.info.NewConfirmed}</span></div>\r\n            <div className=\"num2\"><span>{Math.trunc((props.info.NewConfirmed * 100000) / props.population)}</span></div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div >\r\n          <div className=\"row\">\r\n            <h3 className=\"country\">Total Confirmed</h3>\r\n            <div className=\"num1\"><span >{props.info.TotalConfirmed}</span></div>\r\n            <div className=\"num2\"><span>{Math.trunc((props.info.TotalConfirmed * 100000) / props.population)}</span></div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div >\r\n          <div className=\"row\">\r\n            <h3 className=\"country\">New Deaths</h3>\r\n            <div className=\"num1\"><span >{props.info.NewDeaths}</span></div>\r\n            <div className=\"num2\"><span>{Math.trunc((props.info.NewDeaths * 100000) / props.population)}</span></div>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div >\r\n          <div className=\"row\">\r\n            <h3 className=\"country\"> Total Deaths</h3>\r\n            <div className=\"num1\"><span >{props.info.TotalDeaths}</span></div>\r\n            <div className=\"num2\"><span>{Math.trunc((props.info.TotalDeaths * 100000) / props.population)}</span></div>\r\n\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div >\r\n          <div className=\"row\">\r\n            <h3 className=\"country \"> New Recovered</h3>\r\n            <div className=\"num1 green\"><span >{props.info.NewRecovered}</span></div>\r\n            <div className=\"num2 green\"><span>{Math.trunc((props.info.NewRecovered * 100000) / props.population)}</span></div>\r\n\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div >\r\n          <div className=\"row\">\r\n            <h3 className=\"country \"> Total Recovered</h3>\r\n            <div className=\"num1 green\"><span >{props.info.TotalRecovered}</span></div>\r\n            <div className=\"num2 green\"><span>{Math.trunc((props.info.TotalRecovered * 100000) / props.population)}</span></div>\r\n\r\n          </div>\r\n          <hr />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nexport default Table1p2;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await fetch(url);\r\n      const dataArray = await res.json();\r\n      setData(dataArray);\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return data;\r\n};\r\n\r\nexport default useFetch;\r\n","export const periodInfo = ['Whole period', 'Latest day'];\r\nexport const statusInfo = ['Global cases', 'Global deaths', 'Global recovered'];\r\n\r\nexport const filterInfo = (information, period, status) => {\r\n  let result = [];\r\n  const filteredInfo = [];\r\n  const globalInfo = [];\r\n  const global = information.Global;\r\n  const info = information.Countries;\r\n  if (status === 0 && period === 0) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.TotalConfirmed,\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n\r\n    globalInfo.push({\r\n      global: global.TotalConfirmed,\r\n      textline: 'Global Cases',\r\n      rowText: 'cases',\r\n    });\r\n  } else if (status === 0 && period === 1) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.NewConfirmed,\r\n\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.NewConfirmed,\r\n      textline: 'Global Cases',\r\n      rowText: 'cases',\r\n    });\r\n  } else if (status === 1 && period === 0) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.TotalDeaths,\r\n\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.TotalDeaths,\r\n      textline: 'Global Deaths',\r\n      rowText: 'deaths',\r\n    });\r\n  } else if (status === 1 && period === 1) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.NewDeaths,\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.NewDeaths,\r\n      textline: 'Global Deaths',\r\n      rowText: 'deaths',\r\n    });\r\n  } else if (status === 2 && period === 0) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.TotalRecovered,\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.TotalRecovered,\r\n      textline: 'Global Recovery',\r\n      rowText: 'recovered',\r\n    });\r\n  } else if (status === 2 && period === 1) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.NewRecovered,\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.NewRecovered,\r\n      textline: 'Global Recovery',\r\n      rowText: 'recovered',\r\n    });\r\n  }\r\n  filteredInfo.sort((a, b) => ((a.info < b.info) ? 1 : -1));\r\n  result = [filteredInfo, globalInfo];\r\n\r\n  return result;\r\n};\r\n\r\nexport const findCountryInfo = (information, country) => {\r\n  let countryInfo = {};\r\n  const info = information.Countries;\r\n  info.forEach((el) => {\r\n    if (el.Country === country) {\r\n      countryInfo = {\r\n        country: el.Country,\r\n        NewConfirmed: el.NewConfirmed,\r\n        TotalConfirmed: el.TotalConfirmed,\r\n        NewDeaths: el.NewDeaths,\r\n        TotalDeaths: el.TotalDeaths,\r\n        NewRecovered: el.NewRecovered,\r\n        TotalRecovered: el.TotalRecovered,\r\n      };\r\n    }\r\n  });\r\n  return countryInfo;\r\n};\r\n","const findCountryInfo = (information, country) => {\r\n  let countryInfo = {};\r\n  const info = information.Countries;\r\n  info.forEach((el) => {\r\n    if (el.Country === country) {\r\n      countryInfo = {\r\n        country: el.Country,\r\n        NewConfirmed: el.NewConfirmed,\r\n        TotalConfirmed: el.TotalConfirmed,\r\n        NewDeaths: el.NewDeaths,\r\n        TotalDeaths: el.TotalDeaths,\r\n        NewRecovered: el.NewRecovered,\r\n        TotalRecovered: el.TotalRecovered,\r\n      };\r\n    }\r\n  });\r\n  return countryInfo;\r\n};\r\n\r\nexport default findCountryInfo;\r\n","import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport '../styles/chart4.scss';\r\n\r\nconst Chart4 = (props) => {\r\n  const statusArr = ['Confirmed', 'Deaths', 'Recovered'];\r\n  const numbers = ['Absolute number', 'Per 100 th.'];\r\n  const periods = ['Whole period', 'Daily change'];\r\n  const [status, setStatusInfo] = useState(props.status);\r\n  const [period, setPeriodInfo] = useState(props.period);\r\n  const [numeration, setNumeration] = useState(props.numeration);\r\n\r\n  return (\r\n    <div onMouseOver={() => {\r\n      document.querySelector('.chart .zoom-btn').style.display = 'block';\r\n    }} onMouseOut={() => {\r\n      document.querySelector('.chart .zoom-btn').style.display = 'none';\r\n    }} className=\"chart\">\r\n      <footer>\r\n        <button className=\"arrow\" onClick={() => {\r\n          const newPeriod = period === 0 ? 1 : 0;\r\n          setPeriodInfo(newPeriod);\r\n          props.changeCondition(newPeriod, status, numeration);\r\n        }}>\r\n          <span className=\"arr-icon material-icons\">\r\n            arrow_left\r\n    </span>\r\n        </button>\r\n        <div>{periods[period]}</div>\r\n        <button className=\"arrow\" onClick={() => {\r\n          const newPeriod = period === 1 ? 0 : 1;\r\n          setPeriodInfo(newPeriod);\r\n          props.changeCondition(newPeriod, status, numeration);\r\n        }}>\r\n          <span className=\"arr-icon material-icons\">\r\n            arrow_right\r\n    </span>\r\n        </button>\r\n      </footer>\r\n      <h3>{props.country}</h3>\r\n      <div className=\"chart-content\" style={{\r\n        width: 400,\r\n        height: 100,\r\n        margin: 0,\r\n        backgroundColor: ('#222222'),\r\n      }}>\r\n        {<Line options={props.info.options}\r\n          data={props.info.data} />}\r\n        <button className=\"zoom-btn\">\r\n          <span className=\"zoom-out material-icons \">\r\n            zoom_out_map\r\n      </span>\r\n        </button>\r\n        <footer>\r\n          <button className=\"arrow\" onClick={() => {\r\n            let newStatus = status;\r\n            if (status === 0) {\r\n              newStatus = 2;\r\n            } else {\r\n              newStatus -= 1;\r\n            }\r\n            setStatusInfo(newStatus);\r\n            props.changeCondition(period, newStatus, numeration);\r\n          }}>\r\n            <span className=\" arr-icon material-icons\">\r\n              arrow_left\r\n            </span>\r\n          </button>\r\n          <div>{statusArr[status]}</div>\r\n          <button className=\"arrow\" onClick={() => {\r\n            let newStatus = status;\r\n            if (status === 2) {\r\n              newStatus = 0;\r\n            } else {\r\n              newStatus += 1;\r\n            }\r\n            setStatusInfo(newStatus);\r\n            props.changeCondition(period, newStatus, numeration);\r\n          }}>\r\n            <span className=\"arr-icon material-icons\">\r\n              arrow_right\r\n            </span>\r\n          </button>\r\n        </footer>\r\n        <footer>\r\n          <button className=\"arrow\" onClick={() => {\r\n            const newNumeration = numeration === 0 ? 1 : 0;\r\n            setNumeration(newNumeration);\r\n            props.changeCondition(period, status, newNumeration);\r\n          }}>\r\n            <span className=\"arr-icon material-icons\">\r\n              arrow_left\r\n    </span>\r\n          </button>\r\n          <div>{numbers[numeration]}</div>\r\n          <button className=\"arrow\" onClick={() => {\r\n            const newNumeration = numeration === 1 ? 0 : 1;\r\n            setNumeration(newNumeration);\r\n            props.changeCondition(period, status, newNumeration);\r\n          }}>\r\n            <span className=\"arr-icon material-icons\">\r\n              arrow_right\r\n    </span>\r\n          </button>\r\n        </footer>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart4;\r\n","import React from 'react';\r\nimport '../styles/footer.scss';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <p>\r\n      <a className=\"logo\" href=\"https://rs.school/js/\">\r\n        <img src=\"https://rs.school/images/rs_school_js.svg\" width=\"70\" height=\"25\" alt=\"\">\r\n        </img></a>\r\n      <span>2020 © Covid Dashboard</span>\r\n      <a href=\"https://github.com/mary-jane77\" className=\"stats\">mary-jane77</a>\r\n      <a href=\"https://github.com/Luck8989\" className=\"stats\">Luck8989</a>\r\n    </p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","/* eslint-disable */\r\n/* eslint-disable max-len */\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport MapView from './components/Map/MapView';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './CSS/List.scss';\r\nimport axios from './axios';\r\nimport Summary from './components/Summary.jsx';\r\nimport DetailsView from './components/Map/DetailsView.jsx';\r\nimport './components/Map.css';\r\nimport './App.scss';\r\nimport Table1 from './components/table1.jsx';\r\nimport Table1p2 from './components/table1p2.jsx';\r\nimport useFetch from './components/getInfo.jsx';\r\n\r\nimport {\r\n  filterInfo,\r\n  periodInfo,\r\n  statusInfo,\r\n} from './js/table1Info';\r\nimport findCountryInfo from './js/findCountryInfo';\r\nimport Chart4 from './components/chart4.jsx';\r\nimport { getWorldChartInfo, getCountryChartInfo, dtimeNums } from './js/getChartInfo';\r\nimport Footer from './components/footer.jsx';\r\n\r\nfunction App() {\r\n  const [locationArray, setLocationArray] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState([51.505, -0.09]);\r\n  const [loading, setLoading] = useState(false);\r\n  const info = useFetch('https://api.covid19api.com/summary');\r\n  const [status, setStatusInfo] = useState(0);\r\n  const [period, setPeriodInfo] = useState(0);\r\n  const [numeration, setNumeration] = useState(0);\r\n  const [countryData, setCountry] = useState('Belarus');\r\n  const [chartCountry, setChartCountry] = useState('World');\r\n  const [displayingCountryData, setdisplayingCountryData] = useState(false);\r\n  const OneCountryChartInfo = useFetch(`https://api.covid19api.com/dayone/country/${countryData}`);\r\n  const WorldChartInfo = useFetch(`https://api.covid19api.com/world?from=2020-03-01T00:00:00Z&to=${dtimeNums(-1)}T00:00:00Z`);\r\n  const population = useFetch(`https://restcountries.eu/rest/v2/name/${countryData}`);\r\n\r\n  const changeConditionfromTable = (p, s) => {\r\n    setPeriodInfo(p);\r\n    setStatusInfo(s);\r\n  };\r\n  const changeCondition = (p, s, n) => {\r\n    setPeriodInfo(p);\r\n    setStatusInfo(s);\r\n    setNumeration(n);\r\n  };\r\n\r\nconst filterChartData = () => {\r\n    if (displayingCountryData) {\r\n      return getCountryChartInfo(OneCountryChartInfo,\r\n        period,\r\n        status,\r\n        numeration,\r\n        population[0].population);\r\n    }\r\n    return getWorldChartInfo(WorldChartInfo, period, status, numeration);\r\n  };\r\n\r\n  const filterData = () => filterInfo(info, period, status);\r\n  const findCountry = (country) => {\r\n    setCountry(country);\r\n    setChartCountry(country);\r\n    setdisplayingCountryData(true);\r\n  };\r\n\r\n  function sortedLocationArray(locations) {\r\n    // eslint-disable-next-line max-len\r\n    return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\r\n  }\r\n  const onSelectLocation = useCallback((id) => {\r\n    const location = locationArray.find((_location) => _location.id === id);\r\n    if (location === undefined) {\r\n      setSelectedLocation(null);\r\n      return;\r\n    }\r\n    setSelectedLocation(location);\r\n    const { coordinates: { latitude, longitude } } = location;\r\n    setMapCenter([latitude, longitude]);\r\n  }, [locationArray]);\r\n\r\n\r\n  const onDeselectLocation = useCallback(() => {\r\n    setSelectedLocation(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get('/v2/locations').then((res) => {\r\n      const sortedLocations = sortedLocationArray(res.data.locations);\r\n      setLoading(false);\r\n\r\n      if (res.status === 200) {\r\n        setLocationArray(sortedLocations);\r\n      }\r\n    })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  let detailsView = null;\r\n  if (selectedLocation != null) {\r\n    detailsView = <DetailsView location={selectedLocation} onClickClose={onDeselectLocation} />;\r\n  }\r\n  return (\r\n\r\n    <div className=\"App\">\r\n\r\n <header className=\"App-header\">\r\n        <h1>COVID-19 Dashboard</h1>\r\n      </header>\r\n\r\n          <Summary\r\n        locationArray={locationArray}\r\n        loading={loading}\r\n        selectedLocation={selectedLocation}\r\n        onSelectItem={onSelectLocation}\r\n        onDeselectItem={onDeselectLocation}\r\n          />\r\n\r\n    <div className='cards_map'>\r\n       <MapView\r\n      locationArray={locationArray}\r\n      mapCenter={mapCenter}\r\n      onSelectMarker={onSelectLocation} />\r\n      {detailsView}\r\n </div>\r\n\r\n      {(info && WorldChartInfo) && <Table1\r\n        changeCondition={changeConditionfromTable}\r\n        filterData={filterData}\r\n        filterChartData={filterChartData(periodInfo)}\r\n        info={filterData()}\r\n        periodInfo={periodInfo}\r\n        findCountry={findCountry}\r\n        statusInfo={statusInfo}\r\n        status={status}\r\n        period={period}\r\n      />}\r\n      {(info && population) && <Table1p2 info={findCountryInfo(info, countryData)}\r\n        population={population[0].population} />}\r\n      {(info && WorldChartInfo) && <Chart4\r\n        changeCondition={changeCondition}\r\n        info={filterChartData()}\r\n        country={chartCountry}\r\n        statusInfo={statusInfo}\r\n        periodInfo={periodInfo}\r\n        status={status}\r\n        period={period}\r\n        numeration={numeration}\r\n      />}\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","export const getWorldChartInfo = (summary, period, status, numeration) => {\r\n  let chartData = [];\r\n  let color = 'rgba(221, 1, 1, 0.650)';\r\n  const statusArr = period ? ['New confirmed', 'New deaths', 'New recovered'] : ['Confirmed', 'Deaths', 'Recovered'];\r\n  const now = new Date();\r\n  const MonthArr = [15, 31, 30, 31, 31, 30, 31, 30, now.getDate()];\r\n  let c = 0;\r\n  let j = 0;\r\n  let sum = 0;\r\n  let num = MonthArr[j];\r\n  switch (status) {\r\n    case 0:\r\n      summary.forEach((el) => {\r\n        if (c <= num) {\r\n          period ? sum += Number(el.NewConfirmed) : sum += Number(el.TotalConfirmed);\r\n          c += 1;\r\n        }\r\n        if (c === num) {\r\n          j += 1;\r\n          num = MonthArr[j];\r\n          chartData.push(sum);\r\n          sum = 0;\r\n          c = 0;\r\n        }\r\n      });\r\n      for (let i = 0; i < MonthArr.length; i += 1) {\r\n        chartData[i] = Math.trunc(chartData[i] / MonthArr[i]);\r\n      }\r\n      break;\r\n    case 1:\r\n      summary.forEach((el) => {\r\n        if (c <= num) {\r\n          period ? sum += Number(el.NewDeaths) : sum += Number(el.TotalDeaths);\r\n          c += 1;\r\n        }\r\n        if (c === num) {\r\n          j += 1;\r\n          num = MonthArr[j];\r\n          chartData.push(sum);\r\n          sum = 0;\r\n          c = 0;\r\n        }\r\n      });\r\n      for (let i = 0; i < MonthArr.length; i += 1) {\r\n        chartData[i] = Math.trunc(chartData[i] / MonthArr[i]);\r\n      }\r\n      break;\r\n    case 2:\r\n      color = 'rgba(75, 148, 20, 0.644)';\r\n      summary.forEach((el) => {\r\n        if (c <= num) {\r\n          period ? sum += Number(el.NewRecovered) : sum += Number(el.TotalRecovered);\r\n          c += 1;\r\n        }\r\n        if (c === num) {\r\n          j += 1;\r\n          num = MonthArr[j];\r\n          chartData.push(sum);\r\n          sum = 0;\r\n          c = 0;\r\n        }\r\n      });\r\n      for (let i = 0; i < MonthArr.length; i += 1) {\r\n        chartData[i] = Math.trunc(chartData[i] / MonthArr[i]);\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (numeration) {\r\n    chartData = chartData.map((el) => Math.trunc((el * 100000) / 7827000000));\r\n  }\r\n\r\n  const res = {\r\n    data: {\r\n      labels: ['Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\r\n      datasets: [\r\n        {\r\n          label: `${statusArr[status]} cases`,\r\n          backgroundColor: color,\r\n          data: chartData,\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      layout: {\r\n        padding: {\r\n          top: 0,\r\n          left: 15,\r\n          right: 15,\r\n          bottom: 0,\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: { display: false },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        }],\r\n        yAxes: [{\r\n          ticks: { display: false },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        }],\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  return res;\r\n};\r\nexport const getCountryChartInfo = (summary, period, status, numeration, population) => {\r\n  let chartData = [];\r\n  let color = 'rgba(221, 1, 1, 0.650)';\r\n  const statusArr = ['Confirmed', 'Deaths', 'Recovered'];\r\n  const monthTotal = [];\r\n  const daysTotal = [];\r\n  let days = 0;\r\n  let month = 0;\r\n  let check = '02';\r\n  switch (status) {\r\n    case 0:\r\n\r\n      summary.forEach((el) => {\r\n        if (el.Date.slice(5, 7) !== check) {\r\n          check = el.Date.slice(5, 7);\r\n          daysTotal.push(days);\r\n          monthTotal.push(month);\r\n          days = 0;\r\n          month = 0;\r\n        }\r\n        days += 1;\r\n        month += Number(el.Confirmed);\r\n      });\r\n      for (let i = 0; i < daysTotal.length; i += 1) {\r\n        if (daysTotal[i] === 0) {\r\n          chartData[i] = 0;\r\n        } else {\r\n          chartData[i] = Math.trunc(monthTotal[i] / daysTotal[i]);\r\n        }\r\n      }\r\n      break;\r\n    case 1:\r\n      summary.forEach((el) => {\r\n        if (el.Date.slice(5, 7) !== check) {\r\n          check = el.Date.slice(5, 7);\r\n          daysTotal.push(days);\r\n          monthTotal.push(month);\r\n          days = 0;\r\n          month = 0;\r\n        }\r\n        days += 1;\r\n        month += Number(el.Deaths);\r\n      });\r\n      for (let i = 0; i < daysTotal.length; i += 1) {\r\n        if (daysTotal[i] === 0) {\r\n          chartData[i] = 0;\r\n        } else {\r\n          chartData[i] = Math.trunc(monthTotal[i] / daysTotal[i]);\r\n        }\r\n      }\r\n      break;\r\n    case 2:\r\n      color = 'rgba(75, 148, 20, 0.644)';\r\n      summary.forEach((el) => {\r\n        if (el.Date.slice(5, 7) !== check) {\r\n          check = el.Date.slice(5, 7);\r\n          daysTotal.push(days);\r\n          monthTotal.push(month);\r\n          days = 0;\r\n          month = 0;\r\n        }\r\n        days += 1;\r\n        month += Number(el.Recovered);\r\n      });\r\n      for (let i = 0; i < daysTotal.length; i += 1) {\r\n        if (daysTotal[i] === 0) {\r\n          chartData[i] = 0;\r\n        } else {\r\n          chartData[i] = Math.trunc(monthTotal[i] / daysTotal[i]);\r\n        }\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  if (numeration) {\r\n    chartData = chartData.map((el) => Math.trunc((el * 100000) / population));\r\n  }\r\n\r\n  const res = {\r\n    data: {\r\n      labels: ['Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'],\r\n      datasets: [\r\n        {\r\n          label: `${statusArr[status]} cases`,\r\n          backgroundColor: color,\r\n          data: chartData,\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      layout: {\r\n        padding: {\r\n          top: 0,\r\n          left: 15,\r\n          right: 15,\r\n          bottom: 0,\r\n        },\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          ticks: { display: false },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        }],\r\n        yAxes: [{\r\n          ticks: { display: false },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        }],\r\n      },\r\n\r\n    },\r\n  };\r\n\r\n  return res;\r\n};\r\n\r\nexport function dtimeNums(e) {\r\n  const n = new Date();\r\n  n.setDate(n.getDate() + e);\r\n  return n.toISOString().slice(0, 10);\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}